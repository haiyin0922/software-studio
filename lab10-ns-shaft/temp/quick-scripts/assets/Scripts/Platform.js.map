{"version":3,"sources":["Platform.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["import Player from \"./Player\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Platform extends cc.Component {\r\n  @property({ type: cc.AudioClip })\r\n  soundEffect: cc.AudioClip = null;\r\n\r\n  protected isTouched: boolean = false;\r\n\r\n  private anim: cc.Animation = null;\r\n\r\n  private animState: cc.AnimationState = null;\r\n\r\n  private highestPos: number = 118;\r\n\r\n  private moveSpeed: number = 100;\r\n\r\n  private springVelocity: number = 320;\r\n\r\n  start() {\r\n    this.anim = this.getComponent(cc.Animation);\r\n\r\n    if (this.node.name == \"Conveyor\") {\r\n      this.node.scaleX = Math.random() >= 0.5 ? 1 : -1;\r\n      this.moveSpeed *= this.node.scaleX;\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.isTouched = false;\r\n  }\r\n\r\n  update(dt) {\r\n    if (\r\n      this.node.y - this.highestPos >= 0 &&\r\n      this.node.y - this.highestPos < 100\r\n    )\r\n      this.getComponent(cc.PhysicsBoxCollider).enabled = false;\r\n    else this.getComponent(cc.PhysicsBoxCollider).enabled = true;\r\n  }\r\n\r\n  playAnim() {\r\n    if (this.anim) this.animState = this.anim.play();\r\n  }\r\n\r\n  getAnimState() {\r\n    if (this.animState) return this.animState;\r\n  }\r\n\r\n  platformDestroy() {\r\n    cc.log(this.node.name + \" Platform destory.\");\r\n    this.node.destroy();\r\n  }\r\n\r\n  // ===================== TODO =====================\r\n  // 1. In the physics lecture, we know that Cocos Creator\r\n  //    provides four contact callbacks. You need to use callbacks to\r\n  //    design different behaviors for different platforms.\r\n  //\r\n  //    Hints: The callbacks are \"onBeginContact\", \"onEndContact\", \"onPreSolve\", \"onPostSolve\".\r\n  //\r\n  // 2. There are five different types of platforms: \"Normal\", \"Fake\", \"Nails\", \"Trampoline\", \"Conveyor\".\r\n  //    When player touches the platform, you need to play the corresponding\r\n  //    sound effect for each platform. (The audioClip named \"soundEffect\")\r\n  //    Note that the sound effect only plays on the first time the player touches the platform.\r\n  //\r\n  // 3. \"Trampoline\" and \"Fake\" need to play animation when the player touches them.\r\n  //    TAs have finished the animation functions, \"playAnim\" & \"getAnimState\", for you.\r\n  //    You can directly call \"playAnim\" to play animation, and call \"getAnimState\" to get the current animation state.\r\n  //    You have to play animations at the proper timing.\r\n  //\r\n  // 4. For \"Trampoline\", you have to do \"spring effect\" whenever the player touches it\r\n  //\r\n  //    Hints: Change \"linearVelocity\" of the player's rigidbody to make him jump.\r\n  //    The jump value is \"springVelocity\".\r\n  //\r\n  // 5. For \"Conveyor\", you have to do \"delivery effect\" when player is in contact with it.\r\n  //\r\n  //    Hints: Change \"linearVelocity\" of the player's rigidbody to make him move.\r\n  //    The move value is \"moveSpeed\".\r\n  //\r\n  // 6. For \"Fake\", you need to make the player fall 0.2 seconds after he touches the platform.\r\n  //\r\n  // 7. All the platforms have only \"upside\" collision. You have to prevent the collisions from the other directions.\r\n  //\r\n  //    Hints: You can use \"contact.getWorldManifold().normal\" to judge collision direction.\r\n  //\r\n  //\r\n  // 8. When player touches \"Nails\" platform, you need to call the function \"playerDamage\" in \"Player.ts\" to update player health,\r\n  //    or call the function \"playerRecover\" in \"Player.ts\" when player touches other platforms.\r\n  //\r\n  // 9. When platforms touch the node named \"upperBound\", you need to call the function \"platformDestroy\" to destroy the platform.\r\n  // ================================================\r\n\r\n  onBeginContact(contact, self, other) {\r\n    if(other.node.name=='upperBound'){\r\n      this.platformDestroy();\r\n    }\r\n\r\n    if(contact.getWorldManifold().normal.y <= 0){\r\n      return;\r\n    }\r\n\r\n    else if(!this.isTouched && other.node.name == \"player\"){\r\n      this.isTouched = true;\r\n      cc.audioEngine.playEffect(this.soundEffect, false);\r\n\r\n      if(self.node.name == \"Nails\"){\r\n        other.getComponent(Player).playerDamage();\r\n      }\r\n      else{\r\n        other.getComponent(Player).playerRecover();\r\n      }\r\n\r\n      if(self.node.name == \"Trampoline\"){\r\n        other.getComponent(cc.RigidBody).linearVelocity = cc.v2(0, this.springVelocity);\r\n      }\r\n      else if (self.node.name == \"Fake\"){\r\n        this.playAnim();\r\n        this.getAnimState();\r\n        this.schedule(function(){\r\n          this.getComponent(cc.PhysicsBoxCollider).sensor  = true;\r\n        }, 0.2);\r\n      }\r\n    }\r\n  }\r\n\r\n  onPreSolve(contact, self, other){\r\n    if(self.node.name == \"Conveyor\" && other.node.name == \"player\"){\r\n      other.getComponent(cc.RigidBody).linearVelocity = cc.v2(this.moveSpeed, 0);\r\n    }\r\n  }\r\n\r\n  onPostSolve(contact, self, other){\r\n    if(self.node.name == \"Fake\" && other.node.name == \"player\"){\r\n      self.getComponent(cc.PhysicsBoxCollider).enabled  = false;\r\n    }\r\n  }\r\n\r\n  onEndContact(contact, self, other){\r\n    if(self.node.name=='Trampoline' && other.node.name=='player'){\r\n      this.isTouched = false;\r\n    }\r\n    if(self.node.name == \"Conveyor\" && other.node.name == \"player\"){\r\n      other.getComponent(cc.RigidBody).linearVelocity = cc.v2(0, 0);\r\n    }\r\n  }\r\n}\r\n"]}